describe("Navigation routes", () => {
  it("Visits the homepage", () => {
    cy.visit("/");
    cy.contains("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®").should("exist");
  });

  it("Visits the lost cat page", () => {
    cy.visit("/lost-cat");
    cy.contains("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏≤‡∏°‡∏´‡∏≤‡πÅ‡∏°‡∏ß‡∏´‡∏≤‡∏¢").should("exist");
  });

  it("Visits the found cat page", () => {
    cy.visit("/found-cat");
    cy.contains("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏≤‡∏°‡∏´‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏°‡∏ß").should("exist");
  });

  it("Visits the adopt cat page", () => {
    cy.visit("/adopt-cat");
    cy.contains("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏´‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏°‡∏ß").should("exist");
  });
});

it("Visits the user profile page", () => {
  cy.visit("/auth/login");
  cy.window().then((win) => {
    win.localStorage.setItem("user_id", "test-user-id");
    win.localStorage.setItem(
      "user",
      JSON.stringify({ email: "test@example.com", name: "Test User" })
    );
  });

  // ‚úÖ Go to profile *after* login setup
  cy.visit("/user-profile");

  // ‚úÖ Wait for the text to appear
  cy.contains("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", { timeout: 10000 }).should("exist");
});


describe("Create New Post (mocked quality)", () => {
  beforeEach(() => {
    // ‚úÖ Simulate login
    cy.visit("/auth/login");
    cy.window().then((win) => {
      win.localStorage.setItem("user_id", "test-user-id");
      win.localStorage.setItem(
        "user",
        JSON.stringify({ email: "test@example.com" })
      );
    });

    // ‚úÖ Mock image quality API
    cy.intercept("POST", "**/api/v1/image/check-quality", {
      statusCode: 200,
      body: { issues: [] },
    }).as("mockImageQuality");

    // ‚úÖ Intercept posts (don't hardcode full URL to avoid mismatch)
    cy.intercept("POST", "**/api/v1/posts/").as("createPost"); // trailing slash ‚úÖ

    cy.visit("/create-newpost");
  });

  it("successfully creates a new post", () => {
    // Fill in form
    cy.get('input[type="checkbox"][value="lost"]').check({ force: true });
    cy.get("#name").type("CY");
    cy.get("#male").check({ force: true });
    cy.get("#color").type("‡∏î‡∏≥");
    cy.get("#breed").type("‡πÑ‡∏ó‡∏¢", { force: true });
    cy.get("#catInfo").type("‡∏°‡∏µ‡∏•‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß");
    cy.get("#extraDetails").type("‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà");
    cy.get('input[type="date"]').type(new Date().toISOString().split("T")[0]);

    cy.get('input[type="file"]').selectFile("cypress/fixtures/cat.jpeg", {
      force: true,
    });

    cy.get("#email").check({ force: true });

    // Wait for map to load and click it
    cy.get(".gm-style", { timeout: 10000 }).should("exist");
    cy.get(".gm-style").click(100, 100);

    cy.wait(500); // short buffer for state to settle

    // ‚úÖ Submit form
    cy.get("form").submit();

    // ‚úÖ Wait for backend to respond
    // ‚úÖ Wait for backend to respond with increased timeout
    cy.wait("@createPost", { timeout: 60000 }).its("response.statusCode").should("eq", 200);

    // ‚úÖ Optional: check SweetAlert
    cy.get(".swal2-title").should("contain", "‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  });

  it("prevents submission if required image field is missing", () => {
    // ‚úÖ Fill in the form (skip #color field)
    cy.get('input[type="checkbox"][value="lost"]').check({ force: true });
    cy.get("#name").type("CY");
    cy.get("#male").check({ force: true });
    cy.get("#color").type("‡∏î‡∏≥");
    cy.get("#breed").type("‡πÑ‡∏ó‡∏¢", { force: true });
    cy.get("#catInfo").type("‡∏°‡∏µ‡∏•‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß");
    cy.get("#extraDetails").type("‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà");
    cy.get('input[type="date"]').type(new Date().toISOString().split("T")[0]);

    // ‚úÖ Upload image
    cy.get('input[type="file"]').selectFile("cypress/fixtures/cat.jpeg", {
      force: true,
    });

    // ‚ùå Leave out the color input and attempt to submit
    cy.get("form").submit();

    // üîí Ensure POST /posts was NOT called
    cy.get("@createPost.all").should("have.length", 0);
    // ‚úÖ Optional: check for validation error
    cy.get(".swal2-title").should("contain", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà");
  });
  it("prevents submission if required location field is missing", () => {
    // ‚úÖ Fill in the form (skip #color field)
    cy.get('input[type="checkbox"][value="lost"]').check({ force: true });
    cy.get("#name").type("CY");
    cy.get("#male").check({ force: true });
    cy.get("#color").type("‡∏î‡∏≥");
    cy.get("#breed").type("‡πÑ‡∏ó‡∏¢", { force: true });
    cy.get("#catInfo").type("‡∏°‡∏µ‡∏•‡∏≤‡∏¢‡∏Ç‡∏≤‡∏ß");
    cy.get("#extraDetails").type("‡∏´‡∏≤‡∏¢‡∏ó‡∏µ‡πà");
    cy.get('input[type="date"]').type(new Date().toISOString().split("T")[0]);

    cy.get(".gm-style", { timeout: 10000 }).should("exist");
    cy.get(".gm-style").click(100, 100);

    // ‚ùå Leave out the color input and attempt to submit
    cy.get("form").submit();

    // üîí Ensure POST /posts was NOT called
    cy.get("@createPost.all").should("have.length", 0);
    // ‚úÖ Optional: check for validation error
    cy.get(".swal2-title").should("contain", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û");
  });

});
